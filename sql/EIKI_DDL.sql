CREATE DATABASE IF NOT EXISTS EIKI;
USE EIKI;

SET GLOBAL log_bin_trust_function_creators = 1;

DROP TABLE IF EXISTS EIKI_MEMBER;
DROP TABLE IF EXISTS EIKI_MAIL_AUTH;
DROP TABLE IF EXISTS EIKI_STORE;
DROP TABLE IF EXISTS EIKI_STORE_MENU;
DROP TABLE IF EXISTS EIKI_STORE_PREFERENCE;
DROP TABLE IF EXISTS EIKI_STORE_IMAGE;
DROP TABLE IF EXISTS EIKI_STORE_COMMENT;
DROP TABLE IF EXISTS EIKI_COMMENT_PREFERENCE_HISTORY;
DROP TABLE IF EXISTS EIKI_ACCESS_HISTORY;

-- 유저 테이블
CREATE TABLE IF NOT EXISTS EIKI_MEMBER
(
    MEMBER_DEC_IDX       INTEGER      NOT NULL AUTO_INCREMENT,
    MEMBER_ID            VARCHAR(256) NOT NULL UNIQUE,
    MEMBER_PW            VARCHAR(128) NOT NULL,
    MEMBER_NICKNAME      VARCHAR(16)  NOT NULL UNIQUE,
    MEMBER_BIRTHDAY      DATE         NOT NULL,
    MEMBER_PHONE         VARCHAR(13)  NOT NULL UNIQUE,
    MEMBER_PROFILE_IMAGE VARCHAR(128) NOT NULL UNIQUE,
    IS_ADMIN             TINYINT      NOT NULL DEFAULT 0,
    PRIMARY KEY (MEMBER_DEC_IDX)
) ENGINE = InnoDB;

-- 메일 인증을 위한 인증번호 기록 테이블
CREATE TABLE IF NOT EXISTS EIKI_MAIL_AUTH
(
    MAIL_DEC_IDX        INTEGER      NOT NULL AUTO_INCREMENT,
    MEMBER_ID           VARCHAR(256) NOT NULL,
    AUTH_NUM            VARCHAR(4)   NOT NULL,
    AUTH_REQUESTED_TIME TIMESTAMP    NOT NULL DEFAULT NOW(),
    IS_AUTHORIZED       BOOLEAN      NOT NULL DEFAULT false,
    PRIMARY KEY (MAIL_DEC_IDX)
) ENGINE = InnoDB;

-- 스토어 정보 테이블 
CREATE TABLE IF NOT EXISTS EIKI_STORE
(
    STORE_DEC_IDX          INTEGER     NOT NULL AUTO_INCREMENT,
    STORE_NAME             VARCHAR(64) NOT NULL UNIQUE,
    STORE_CALL             VARCHAR(13) NOT NULL UNIQUE,
    STORE_LATITUDE         FLOAT(8, 5) NOT NULL,
    STORE_LONGITUDE        FLOAT(8, 5) NOT NULL,
    STORE_TYPE             VARCHAR(10) NOT NULL,
    STORE_DESCRIPTION      TEXT        NOT NULL,
    STORE_COMMENT_COUNT    INTEGER     NOT NULL DEFAULT 0,
    STORE_PREFERENCE_COUNT INTEGER     NOT NULL DEFAULT 0,
    IS_DELIVERY            BOOLEAN     NOT NULL DEFAULT false,
    CHECK (STORE_TYPE IN ("PC", "CAFE", "RESTAURANT")),
    PRIMARY KEY (STORE_DEC_IDX)
) ENGINE = InnoDB;

-- 스토어 메뉴 테이블 
CREATE TABLE IF NOT EXISTS EIKI_STORE_MENU
(
    STORE_DEC_IDX INTEGER     NOT NULL,
    MENU_DEC_IDX  INTEGER     NOT NULL AUTO_INCREMENT,
    MENU_NAME     VARCHAR(64) NOT NULL,
    MENU_PRICE    INTEGER     NOT NULL,
    PRIMARY KEY (MENU_DEC_IDX),
    FOREIGN KEY (STORE_DEC_IDX) REFERENCES EIKI_STORE (STORE_DEC_IDX)
        ON DELETE CASCADE
        ON UPDATE CASCADE
) ENGINE = InnoDB;

-- 스토어 선호도 테이블
CREATE TABLE IF NOT EXISTS EIKI_STORE_PREFERENCE
(
    STORE_DEC_IDX  INTEGER NOT NULL,
    MEMBER_DEC_IDX INTEGER NOT NULL,
    PREFERENCE     TINYINT NOT NULL DEFAULT 0,
    CHECK (PREFERENCE IN (1, 2, 3, 4, 5)),
    PRIMARY KEY (STORE_DEC_IDX, MEMBER_DEC_IDX),
    FOREIGN KEY (STORE_DEC_IDX) REFERENCES EIKI_STORE (STORE_DEC_IDX)
        ON DELETE CASCADE
        ON UPDATE CASCADE,
    FOREIGN KEY (MEMBER_DEC_IDX) REFERENCES EIKI_MEMBER (MEMBER_DEC_IDX)
        ON UPDATE CASCADE
) ENGINE = InnoDB;

-- 스토어 이미지 테이블
CREATE TABLE IF NOT EXISTS EIKI_STORE_IMAGE
(
    STORE_DEC_IDX    INTEGER      NOT NULL,
    IMAGE_DEC_IDX    TINYINT      NOT NULL AUTO_INCREMENT,
    STORE_IMAGE      VARCHAR(128) NOT NULL UNIQUE,
    STORE_IMAGE_TYPE VARCHAR(9)   NOT NULL,
    CHECK (STORE_IMAGE_TYPE IN ("THUMBNAIL", "OTHER")),
    PRIMARY KEY (IMAGE_DEC_IDX),
    FOREIGN KEY (STORE_DEC_IDX) REFERENCES EIKI_STORE (STORE_DEC_IDX)
        ON DELETE CASCADE
        ON UPDATE CASCADE
) ENGINE = InnoDB;

-- 스토어 코멘트 테이블
CREATE TABLE IF NOT EXISTS EIKI_STORE_COMMENT
(
    STORE_DEC_IDX      INTEGER  NOT NULL,
    MEMBER_DEC_IDX     INTEGER  NOT NULL,
    COMMENT_DEC_IDX    INTEGER  NOT NULL AUTO_INCREMENT,
    COMMENT_CONTENT    TEXT     NOT NULL,
    COMMENT_PREFERENCE INTEGER  NOT NULL DEFAULT 0,
    UPDATED_AT         DATETIME NOT NULL,
    PRIMARY KEY (COMMENT_DEC_IDX),
    FOREIGN KEY (STORE_DEC_IDX) REFERENCES EIKI_STORE (STORE_DEC_IDX)
        ON DELETE CASCADE
        ON UPDATE CASCADE,
    FOREIGN KEY (MEMBER_DEC_IDX) REFERENCES EIKI_MEMBER (MEMBER_DEC_IDX)
        ON DELETE NO ACTION
        ON UPDATE CASCADE
) ENGINE = InnoDB;

-- 스토어 코멘트 좋아요 히스토리 테이블 (특정 스토어의 특정 코멘트를 특정 멤버가 클릭)
CREATE TABLE IF NOT EXISTS EIKI_COMMENT_PREFERENCE_HISTORY
(
    STORE_DEC_IDX   INTEGER NOT NULL,
    MEMBER_DEC_IDX  INTEGER NOT NULL,
    COMMENT_DEC_IDX INTEGER NOT NULL,
    PRIMARY KEY (STORE_DEC_IDX, MEMBER_DEC_IDX, COMMENT_DEC_IDX),
    FOREIGN KEY (STORE_DEC_IDX) REFERENCES EIKI_STORE (STORE_DEC_IDX)
        ON DELETE CASCADE
        ON UPDATE CASCADE,
    FOREIGN KEY (MEMBER_DEC_IDX) REFERENCES EIKI_MEMBER (MEMBER_DEC_IDX)
        ON DELETE NO ACTION
        ON UPDATE CASCADE,
    FOREIGN KEY (COMMENT_DEC_IDX) REFERENCES EIKI_STORE_COMMENT (COMMENT_DEC_IDX)
        ON DELETE CASCADE
        ON UPDATE CASCADE
) ENGINE = InnoDB;

-- 일별 페이지 접근을 기록하기 위한 테이블
CREATE TABLE IF NOT EXISTS EIKI_ACCESS_HISTORY
(
    ACCESS_DATE  DATE   NOT NULL,
    ACCESS_COUNT BIGINT NOT NULL DEFAULT 0,
    PRIMARY KEY (ACCESS_DATE)
) ENGINE = InnoDB;


